default:
  tags:
    - search

stages:
  - build
  - test
  - publish

variables:
  PIP_REQUIREMENTS_FILE: "requirements.txt"

.poetry:
  image: python:3.7

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  cache:
    key:
      files:
        - poetry.lock
    paths:
      - .cache/pip

  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install --no-ansi --no-interaction -vv
    - source `poetry env info --path`/bin/activate

make requirements txt:
  extends: .poetry
  stage: build
  script:
    - pip install poetry
    - poetry export -o "$PIP_REQUIREMENTS_FILE"
  artifacts:
    paths:
      - "$PIP_REQUIREMENTS_FILE"

.package:
  extends: .poetry
  stage: build
  dependencies:
    - make requirements txt
  artifacts:
    paths:
      - "*.tar.gz"

package add-on:
  extends: .package
  script:
    - poetry run slim package Splunk_TA_censys

package asm app:
  extends: .package
  script:
    - poetry run slim package censys_asm_app

.appinspect:
  extends: .poetry
  stage: test
  artifacts:
    paths:
      - "*-appinspect.json"

appinspect add-on:
  extends: .appinspect
  script:
    - poetry run splunk-appinspect inspect Splunk_TA_censys-*.tar.gz --output-file add-on-appinspect.json --included-tags cloud --included-tags future --included-tags python3_version
  dependencies:
    - package add-on

appinspect asm app:
  extends: .appinspect
  script:
    - poetry run splunk-appinspect inspect censys_asm_app-*.tar.gz --output-file asm-appinspect.json --included-tags cloud --included-tags future --included-tags python3_version
  dependencies:
    - package asm app

lint:
  extends: .poetry
  stage: test
  script:
    - poetry run isort . --check-only

.test-template:
  extends: .poetry
  stage: test
  script: pytest

release-add-on:
  extends: .poetry
  stage: publish
  script:
    - poetry run python ./scripts/release.py -a 6399 -f Splunk_TA_censys-*.tar.gz
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /^add-on-v[0-9]+\.[0-9]+\.[0-9]+$/

release-asm-app:
  extends: .poetry
  stage: publish
  script:
    - poetry run python ./scripts/release.py -a 4830 -f censys_asm_app-*.tar.gz
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /^asm-app-v[0-9]+\.[0-9]+\.[0-9]+$/

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

sast:
  stage: test
  variables:
    SEARCH_MAX_DEPTH: "10"
    SAST_BANDIT_EXCLUDED_PATHS: "*/aob_py3/*"

kics-iac-sast:
  stage: test

secret_detection:
  stage: test
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"
    SECRET_DETECTION_EXCLUDED_PATHS: "**/bin/**/aob_py3"

license_scanning:
  stage: test
  dependencies:
    - make requirements txt

gemnasium-python-dependency_scanning:
  stage: test
  dependencies:
    - make requirements txt
  before_script:
    - rm poetry.lock pyproject.toml
  # Triggers artifacts download, until https://gitlab.com/gitlab-org/gitlab/-/issues/249569 is implemented
